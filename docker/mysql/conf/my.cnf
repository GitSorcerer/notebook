#!/etc/my.cnf
##################################################-- MySQL基础配置 -- ##################################################
# https://dev.mysql.com/doc/refman/5.7/en/server-option-variable-reference.html
# https://dev.mysql.com/doc/refman/8.0/en/server-option-variable-reference.html

[mysqld]

# MySQL 安装目录
basedir=''
# 时区
default-time_zone = '+8:00'
# MySQL数据目录
datadir='/var/lib/mysql'

# MySQL服务器日志(默认在datadir目录下)
log_error=mysql-server.log

# MySQL进程IP,默认在datadir目录下
pid-file=/var/lib/mysql/mysql.pid

# MySQL用户
user=mysql

# MySQL端口
port=3306

# MySQL数据库默认编码
character_set_server=utf8mb4

# MySQL数据库字符排序集
collation_server=utf8mb4_general_ci

# 数据本地加载读写开关,mysql8.0以上默认OFF,如果要加载文件须为{ON|1}
# local_infile=OFF

group_concat_max_len=102400

# 数据库以及表名是否大小写区分(默认:windows:1;linux:0)
lower_case_table_names=1

# MySQL数据库最大连接数
max_connections=512

# 每个客户端每次发送包的大小限制,较大的SQL可以提高此值
max_allowed_packet=32M

##################################################-- MySQL进阶配置 -- ##################################################
# MySQL数据加载读写目录(必须先创建,Windows注意导数据时使用\\转义,Linux中注意目录权限)
# secure_file_priv='/workspace/mysql-5.7.28/files'

# MySQL临时目录(需要手动创建)
# tmpdir=/workspace/mysql-5.7.28/tmp

# 日志记录中时区(默认UTC),mysql5.7开始有此参数
# log_timestamps=SYSTEM

lc_messages_dir = /usr/share/mysql/

# 数据库以及表名是否大小写区分(默认:windows:1;linux:0)
lower-case-table-names = 1

# 启动MySQL时执行的执行文件
# init_file='/var/lib/mysql/init.sql'

# 服务器设置服务器所在时区
# time_zone=SYSTEM

# 是否启用时间戳的一些非标准行为
# explicit_defaults_for_timestamp=OFF

# MySQL socket文件,Linux环境才有的配置
# socket=/tmp/mysql.sock

# MySQL服务器ID,bin-log以及主从复制使用
# server-id=1314

# 控制是否开启二进制日志,MySQL8.0默认开启
# skip-log-bin

# 二进制日志刷新频率,较高的值可提升性能,但会有丢失数据风险
# sync_binlog=1

# 二进制日志格式 <5.7.7:STATEMENT;>5.7.7:ROW;可选值为:STATEMENT,ROW或MIXED
# 参考 https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html
# binlog_format=ROW

# MySQL基于行的复制,此变量确定如何将log行写入二进制日志,非旋转存储设备使用minimal
# binlog_row_image=FULL

# MySQL二进制日志的缓存大小,以保存事务期间发出的非事务性语句,对于大型非事务性语句,则可以增加此缓存的大小以获得更好的性能
# binlog_stmt_cache_size=32K

# MySQL将数据刷新到 InnoDB 数据文件和日志文件的方法,Windows:async_unbuffered 类unix:fsync
# innodb_flush_method=NULL

# MySQL刷新一个页面的时候是否刷新别的脏页,HDD配置为1,SSD配置为0
# innodb_flush_neighbors=1

# 每N秒钟写入并刷新日志
# innodb_flush_log_at_timeout=1

# 设置事务日志刷新等级,可选的值是{0|1|2}(启用二进制日志必须设置为1)
# innodb_flush_log_at_trx_commit=1

# MySQL二进制日志文件前缀(mysql-bin.000001)
# log_bin=mysql-bin

# MySQL二进制日志索引文件(mysql-bin.index)
# log_bin_index=mysql-bin

# MySQL单个二进制日志文件最大大小
# max_binlog_size=1G

# MySQL二进制日志文件保留时间(单位:s,默认2592000)
# expire_logs_days=30                  # <MySQL5.7
# binlog_expire_logs_seconds=2592000   # >MySQL8.0

# MySQL 主从日志复制时忽略该表,可以使用通配符mydb.%
# replicate_wild_ignore_table=mydb.table

# 主从复制中继日志文件索引
# relay_log=mysql-relay

# 主从复制中继日志文件名前缀
# relay_log_index = mysql-relay

# 主从复制延迟单个日志文件最大尺寸
# max_relay_log_size=0

# 主从复制延迟所有中继日志使用的最大空间量
# relay_log_space_limit=0

# MySQL最大连接错误
# max_connect_errors=100

# MySQL禁用域名解析,加快访问速度
# skip_name_resolve

# MySQL身份验证插件,<8.0 mysql_native_password; >=8.0 caching_sha2_password
# default_authentication_plugin=mysql_native_password

# 指定日志(慢查询,通用日志)的输出位置,NONE(无输出);FILE(记录到文件,默认值)
# log_output=FILE

# 禁用或启用当前会话的常规查询日志记录,OFF表示启用记录,ON表示禁用日志
# sql_log_off=OFF

# 慢查询日志是否开启以及文件名(默认数据目录)
# slow_query_log=ON
# slow_query_log_file=mysql-slow.log

# 超过此时间的查询会被记录到慢查询
# long_query_time=10

# 记录没有使用用索引的查询
# log_queries_not_using_indexes=ON

# 通用日志文件是否开启以及文件名(默认数据目录)
# general_log=ON
# general_log_file=mysql-general.log

# 服务器关闭交互式空闲连接等待时间,单位秒
# interactive_timeout=28800

# 服务器关闭非交互式空闲连接等待时间,单位秒
# wait_timeout=28800

################################################## -- MySQL高级配置 -- ##################################################
# MySQL默认存储引擎
# default_storage_engine='InnoDB'

# MySQL默认临时表存储引擎
# default_tmp_storage_engine='InnoDB'

# MySQL 禁用特定存储引擎
# disabled_storage_engines='FEDERATED'

# MySQL中InnoDB内存自动配置(>=MySQL8.0)
# innodb_dedicated_server=ON

# MySQL中InnoDB缓冲池大小(单位:B),开启自动配置(>=MySQL8.0 Mem<1GB:128MB; Mem<=4GB:0.5*Mem; Mem>4GB:Mem*0.75)
# innodb_buffer_pool_size=128M  # 建议物理内存(1/2 ~ 3/4) * Mem

# MySQL中InnoDB表空间的页大小,只能在初始化MySQL时配置,SSD设备要减少,建议与存储设备扇区大小一致
# innodb_page_size=16K

# MySQL生成和验证存储在表空间的磁盘块中的校验和算法
# innodb_checksum_algorithm=crc32

# MySQL中缓冲日志文件大小(单位:B),建议为：0.25 * innodb_buffer_pool_size
# innodb_log_file_size =48M

# MySQL缓冲池实例数,满足:缓冲池大小/缓冲池实例 >= 1 GB
# innodb_buffer_pool_instances=1

# MySQL缓冲池实例中刷新脏页的页面清洁程序线程数,值应该与缓冲池实例相同
# 默认值为4,设置超过缓冲池实例数截断为缓冲池实例数
# innodb_page_cleaners=1

# MySQL中InnoDB系统表空间和相关的数据结构
# innodb_data_file_path=ibdata1:12M:autoextend

# MySQL中死锁检测,高并发系统上,禁用死锁检测更有效,OFF表示禁止
# innodb_deadlock_detect=ON

# MySQL中锁等待超时时间(单位:s),对于高度交互或OLTP系统可降低此值;对于长时间运行的操作OLAP可以增加此值
# innodb_lock_wait_timeout=50

# MySQL中缓冲池最大脏页百分比(N%),默认:75%; >=8.0版本:90%
# innodb_max_dirty_pages_pct=75

# MySQL中自增长交错模式,提高并发性,多行并行插入,默认:<8.0版本:1;>=8.0版本:2
# innodb_autoinc_lock_mode=1

# MySQL中InnoDB日志缓冲区大小(单位:B),默认16MB,大日志缓冲区使大型事务能够运行,而无需在事务提交之前将日志写入磁盘
# innodb_log_buffer_size=16M    # 增大此配置可以缓解高I/O问题

# MySQL可用于InnoDB后台任务的每秒I/O操作数,SSD硬盘:1000
# innodb_io_capacity=200

# MySQL定义I/O刷新落后时,最大每秒I/O操作数,SSD硬盘:2000
# innodb_io_capacity_max=400

# MySQL中MyISAM存储引擎索引块的缓冲,主要使用MyISAM可增大此配置
# key_buffer_size=128M

# MySQL索引扫描,全表扫描连接缓冲区大小
# join_buffer_size=256K

# MySQL中MyISAM引擎为线程顺序扫描每个表分配的缓冲区（16G 1M）
# read_buffer_size=128K

# MySQL中MyISAM引擎为线程非顺序读取每个表分配的缓冲区
# read_rnd_buffer_size=256K

# MySQL为每个连接分配的排序缓冲区
# sort_buffer_size=256K

# MySQL变更缓冲区占总缓冲池的比例,默认25%,最大50%
# innodb_change_buffer_max_size=25

# MySQL用于InnoDB清除操作的后台线程数,提高此值可以提高在多个表上执行DML操作的系统的效率,最大值32
# innodb_purge_threads=4

# 每个缓冲池实例指定页面清洁程序线程扫描以查找要刷新的脏页的缓冲池LRU页面列表的下行距离
#  innodb_lru_scan_depth* innodb_buffer_pool_instances 定义了每秒页面清洁器线程执行的工作量
# innodb_lru_scan_depth=1024

# 启用随机预读技术以优化InnoDB I/O.
# innodb_random_read_ahead=OFF

# 控制InnoDB将页预读预取到缓冲池的阀值(最大值64),参考 https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-read_ahead.html
# innodb_read_ahead_threshold=56

# MySQL用于InnoDB引擎读取操作的I/O线程数,如果在innodb status中看到Pending reads > innodb_read_io_threads*64,需要增加此值(SSD存储设备可增加此值)
# innodb_read_io_threads=4

# MySQL用于InnoDB引擎写入操作的I/O线程数(SSD存储设备可增加此值)
# innodb_write_io_threads=4

# MySQL所有线程的打开表数,增大该值将增加mysqld所需的文件描述符的数量
# table_open_cache=2000

# 打开表缓存实例的数量,多会话访问表时缓存的操作具有更高的性能
# table_open_cache_instances=16

# MySQL打开表的文件描述符数量,计算方式: 10 + max_connection * 5
# open_files_limit=5000

# MySQL用于InnoDB引擎写入操作的I/O线程数
# MySQL根据系统调用设置清除次数释放回滚段的频率(设置128表示每清除128次释放一次回滚段)
# innodb_purge_rseg_truncate_frequency=128

# 控制提交事务ACID合规性
# 默认1:(事务提交刷新),0:(每秒定时刷新),2:(事务提交并定时刷新)
# innodb_flush_log_at_trx_commit=1

# 控制日志刷新频率(默认1秒)
# innodb_flush_log_at_timeout=1

# InnoDB为每个表文件表 空间 启用文件格式
# innodb_file_format=Barracuda

# InnoDB表和用户创建的临时表的默认行格式
# innodb_default_row_format

# 每个表分配一个表空间,默认ON
# innodb_file_per_table=ON

# MySQL中Innodb严格模式,快速失败
# innodb_strict_mode=ON

# 定义互斥锁/锁定等待数组的大小,增加该值会实现更高的并发性.
# 对于经常产生大量等待线程(通常大于768)的工作负载,建议增加该值(最大值1024)
# innodb_sync_array_size=1

# 操作系统限制InnoDB线程数,默认0不限制,如果mysql和其他服务共享CPU,需要配置
# innodb_thread_concurrency=0

# MyISAM表线程批量插入优化中使用的树缓存大小
# bulk_insert_buffer_size=8M

# MySQL针对MyISAM数据文件无间隙表允许并发插入(NEVER,AUTO,ALWAYS)
# concurrent_insert=AUTO

# MyISAM设置恢复表时使用的缓冲区大小
# myisam_sort_buffer_size=8M

# MySQL查询中临时表的大小,与max_heap_table_size相同
# tmp_table_size=16M

# MySQL查询中堆表的大小,与tmp_table_size相同
# max_heap_table_size=16M

# 启用的innodb_flush_sync变量使innodb_io_capacity设置在检查点发生I/O活动突发期间被忽略
# 如果手动设置了innodb_io_capacity,则需要关闭该配置
# innodb_flush_sync=ON

# MySQL用于InnoDB后台任务的每秒I/O操作数(IOPS),大约100的值适用于消费者级别的存储设备,
# 更快的硬盘,RAID配置和固态驱动器(SSD)可配置更高的值
# 修改此选项需要禁用innodb_flush_sync
# innodb_io_capacity=200

# MySQL用于InnoDB后台任务的最大每秒I/O操作数(IOPS),如果刷新活动落后,则会用更高的每秒I/O操作速率(IOPS)积极进行刷新
# innodb_io_capacity_max=2000

# MySQL数据库SQL模式
# ONLY_FULL_GROUP_BY 没有出现在group by中的字段不允许select显示
# STRICT_TRANS_TABLES 对于事务表,如果无法插入,则中止该语句并回滚.对于非事务性表,如果发生错误,则中止该语句,错误之前的不会回滚.
# NO_ZERO_IN_DATE 日期中不允许使用0填充
# NO_ZERO_DATE 日期中不允许使用0填充
# ERROR_FOR_DIVISION_BY_ZERO 除0显示错误而不是警告
# NO_AUTO_CREATE_USER 禁止使用grant创建用户
# NO_ENGINE_SUBSTITUTION 当用户自定义存储引擎不可用时显示错误而不是警告后自动切换到默认存储引擎
# MySQL8.0中此变量可能有所更改
# sql-mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
# sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'


# MySQL事务隔离级别,(READ-UNCOMMITTED,READ-COMMITTED,REPEATABLE-READ,SERIALIZABLE)
# transaction_isolation=READ-COMMITTED

################################################## -- MySQL终极配置 -- ##################################################
# 数据库崩溃无法启动时使用,范围 0~6 之间,越大的值可能导致的数据损失程度越高
# innodb_force_recovery=0

# MySQL不用授权表登录服务器,仅限紧急无法登录使用
# skip_grant_tables
sql-mode = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
[mysql]
# 不自动加载数据库表
no-auto-rehash

# 客户端命令默认提示符
prompt='[mysql:\U \d]> '

[client]
# 本地客户连接主机名
# host='your ip address'

# 本地客户连接端口号
# port='your port'

# MySQL socket文件,Linux环境才有的配置
# socket=/tmp/mysql.sock

# 本地客户端用户名
# user='your username'

# 本地客户端密码
# password='your password'

# 客户端默认连接的数据库
# database='your database'

